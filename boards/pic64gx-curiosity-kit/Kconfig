# SPDX-License-Identifier: Apache-2.0

menu "PIC64GX HAL Configuration"
    depends on PLATFORM_MSS
config IMAGE_LOADED_BY_BOOTLOADER
    int
    prompt "No previous stage bootloader is used"
    default 0
    help
        We set IMAGE_LOADED_BY_BOOTLOADER = 0 if the application image runs from
        non-volatile memory after reset. (No previous stage bootloader is used.)
        Set IMAGE_LOADED_BY_BOOTLOADER = 1 if the application image is loaded
        by a previous stage bootloader. PIC64GX_HAL_HW_CONFIG is defined if we are
        a boot-loader. This is a conditional compile switch is used to determine
        if MPFS HAL will perform the hardware configurations or not.
        Defined => This program acts as a First stage bootloader and
                    performs hardware configurations.
        Not defined => This program assumes that the hardware configurations are
                        already performed (Typically by a previous boot stage)
        List of items initialised when PIC64GX_HAL_HW_CONFIG is enabled
        - load virtual rom (see load_virtual_rom(void) in system_startup.c)
        - l2 cache config
        - Bus error unit config
        - MPU config
        - pmp config
        - I/O, clock and clock mux's, DDR and SGMII
        - will start other harts, see text describing PIC64GX_HAL_FIRST_HART,
        PIC64GX_HAL_LAST_HART above

config PIC64GX_HAL_SHARED_MEM_ENABLED
    bool
    prompt "Enable shared memory"
    default n
    help
        set if you are using common memory for sharing accross harts.
        Make sure common memorry is allocated in the linker script.
        See app_hart_common mem section in the example platform linker script.

config PIC64GX_HAL_FIRST_HART
    int
    prompt "First HART to start"
    default 0
    help
        PIC64GX_HAL_FIRST_HART and PIC64GX_HAL_LAST_HART defines are used to specify
        which harts to actually start. The value and the actual hart it 
        represents are listed below:
        value  hart
        0  E51
        1  U54_1
        2  U54_2
        3  U54_3
        4  U54_4
        Set PIC64GX_HAL_FIRST_HART to a value greater than 0 if you do not want
        your application to start and execute code on the harts represented by
        smaller value numbers. Set PIC64GX_HAL_LAST_HART to a value smaller than 4
        if you do not wish to use all U54_x harts.
        Harts that are not started will remain in an infinite WFI loop unless
        used through some other method.
        The value of PIC64GX_HAL_FIRST_HART must always be less than
        PIC64GX_HAL_LAST_HART. The value of PIC64GX_HAL_LAST_HART must never be 
        greater than 4.
        A typical use-case where you set PIC64GX_HAL_FIRST_HART = 1 and
        PIC64GX_HAL_LAST_HART = 1 is when
        your application is running on U54_1 and a bootloader running on E51
        loads your application to the target memory and kicks-off U54_1 to run
        it.

config PIC64GX_HAL_LAST_HART
    int
    prompt "Last HART to start"
    default 4
    help
        see PIC64GX_HAL_FIRST_HART

config BEU_ENABLE
    int
    prompt "Bus Error Unit (BEU) enable"
    default 0
    help
        Configures the events that the BEU can report.
        1= enabled, 0 = disabled.

config BEU_PLIC_INT
    int
    prompt "BEU PLIC interrupt"
    default 0
    help
        Configures which accrued events should generate an interrupt to the
        PLIC.

config BEU_LOCAL_INT
    int
    prompt "BEU Local interrupt"
    default 0
    help
        Configures which accrued events should generate a local interrupt to
        the hart on which the event accrued. (cp is this a typo?)

config SGMII_SUPPORT
    bool
    prompt "SGMII support" 
    default y

config DDR_SUPPORT
    bool
    prompt "DDR Support"
    default y

config MSSIO_SUPPORT
    bool
    prompt "MSSIO support"
    default y

endmenu
